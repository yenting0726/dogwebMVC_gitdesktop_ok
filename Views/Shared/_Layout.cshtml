<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - dogweb</title>
    <script type="importmap"></script>
    <link rel="stylesheet" href="https://rsms.me/inter/inter.css" />
    
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/modern-styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    @* <link rel="stylesheet" href="~/css/petweb.css" asp-append-version="true" /> *@
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script src="~/js/app.js"></script>
 <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</head>
<body>
  
    <div class="wrap">
        <div class="background"></div>
        <div class="background-extend"></div>
        <div class="background-extend2"></div>
    <header>
        
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3 ">
            <div class="container-fluid sticky-top">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index"><div class="logo">
            <div class="logo-icon">D</div>
            <div class="logo-text">Walk with Dogs</div>
        </div>
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>


                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between nav123 ">
                    <ul class="navbar-nav  ms-auto">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">首頁</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Googlemap">公園地圖</a>
                        </li>
                          <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Products" asp-action="Index">產品</a>
                        </li>
                            <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="shopping">購物車</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="member">加入會員</a>
                  
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="memberinfo">會員資訊</a>
                        </li>


                    </ul>
                </div>
            </div>
        </nav>
        
    </header>
    <div class="container ">
        <main role="main" class="pb-3 containerbody  ">
            @RenderBody()
        </main>
    </div>
     <footer>
        <div class="footer">
            <p class="text-center">&copy; 2025 DogWeb. All rights reserved.</p>
            <div class="social-links text-center">
                <a href="https://www.facebook.com" target="_blank" class="me-3"><i class="fab fa-facebook"></i></a>
                <a href="https://www.twitter.com" target="_blank" class="me-3"><i class="fab fa-twitter"></i></a>
                <a href="https://www.instagram.com" target="_blank" class="me-3"><i class="fab fa-instagram"></i></a>
                <a href="https://line.me/R/ti/p/%40630uwunf" target="_blank" class="me-3"><i class="fab fa-line"></i></a>
                <a href="https://www.youtube.com" target="_blank"><i class="fab fa-youtube"></i></a>
                <a href="~/images/M_gainfriends_2dbarcodes_GW.png"><img src="~/images/S_gainfriends_2dbarcodes_GW.png" alt=""></a>
        </div>
    </footer>
<a href="https://line.me/R/ti/p/%40630uwunf" target="_blank" class="line-float-btn" title="聯絡我們">
    <i class="fab fa-line"></i>
</a>

  <a class="line-float-btn1" onclick="openLineChat()" title="聯絡我們">
    <i class="fa-sharp fa-solid fa-user"></i>
  </a>

  <div id="chatbox" role="dialog" aria-modal="true" aria-labelledby="chatboxTitle">
    <header>
      <span id="chatboxTitle">客服機器人</span>
      <button aria-label="關閉聊天視窗" onclick="closeLineChat()">&times;</button>
    </header>
    <div class="chat-content" id="chatContent">
      <div class="message bot">您好！有什麼我可以幫忙的嗎？</div>
    </div>
    <div class="chat-input-area">
      <input type="text" id="userInput" placeholder="輸入訊息..." aria-label="輸入訊息" />
      <button class="send-btn" onclick="sendMessage()">送出</button>
    </div>
  </div>

</div>

</body>
<script>
    // 取得 HTML 元素：聊天框本體、訊息內容區、輸入框
    const chatbox = document.getElementById('chatbox');        //聊天視窗容器（整個視窗）
    const chatContent = document.getElementById('chatContent');// 顯示對話訊息內容的區塊
    const userInput = document.getElementById('userInput');    // 使用者輸入文字的 input 欄位

// 開啟聊天視窗並自動將輸入框聚焦
    function openLineChat() { 
      chatbox.style.display = 'flex';  // 顯示聊天視窗（使用 flex 排版）
      userInput.focus();               // 自動聚焦到輸入框
    }
// 關閉聊天視窗
    function closeLineChat() {
      chatbox.style.display = 'none';// 隱藏聊天視窗
    }
// 加入一則訊息到對話框中
    function appendMessage(text, sender) {
     const msgDiv = document.createElement('div');  // 建立訊息的 <div>
  msgDiv.classList.add('message', sender);       // 加上 CSS 類別 "message" 和發送者類別（'user' 或 'bot'）
  msgDiv.textContent = text;                     // 設定訊息文字內容
  chatContent.appendChild(msgDiv);               // 加入到聊天內容區
  chatContent.scrollTop = chatContent.scrollHeight; // 捲動到底部，顯示最新訊息
    }
// 根據使用者輸入的文字，回傳對應的機器人回應
    function botReply(userText) {
      // 簡單的關鍵字回覆邏輯，可依需求擴充
      userText = userText.toLowerCase(); // 小寫處理以利關鍵字比對

      if (userText.includes('你好') || userText.includes('哈囉')) {
        return '您好！很高興為您服務。';
      } else if (userText.includes('產品')) {
        return '我們有多種產品，請問您想了解哪一類？';
      } else if (userText.includes('價格')) {
        return '價格會依產品不同而有所差異，請告訴我您感興趣的產品。';
      } else if (userText.includes('謝謝') || userText.includes('感謝')) {
        return '不客氣！有問題隨時找我喔！';
      } else {
        return '抱歉，我還在學習中，請稍後再試或聯絡真人客服。';
      }onMouseMove
    }
// 傳送使用者訊息並呼叫機器人回應
    function sendMessage() {
      const text = userInput.value.trim();  // 取得輸入內容，並去除前後空白
  if (text === '') return;              // 若為空則不處理

  appendMessage(text, 'user');          // 顯示使用者訊息
  userInput.value = '';                // 清空輸入欄

  // 模擬機器人延遲 0.5 秒後回應
  setTimeout(() => {
    const reply = botReply(text);       // 取得機器人回應
    appendMessage(reply, 'bot');        // 顯示機器人回應
  }, 500);
    }

    // 按 Enter 鍵送出訊息
    userInput.addEventListener('keydown', function (e) {
      if (e.key === 'Enter') {
        sendMessage();
      }
    });

    const TAIL_LENGTH = 10;  // 尾巴段數量，總共會有10個小圓點組成尾巴

    const app = Vue.createApp({
      data() {
        return {
          mouseX: 0, // 滑鼠X座標（相對於容器）
          mouseY: 0, // 滑鼠Y座標（相對於容器）
           // 初始化尾巴陣列，每個元素包含x,y座標，初始都設為(0,0)
          tail: Array.from({ length: TAIL_LENGTH }, () => ({ x: 0, y: 0 })),
          // 尾巴每段的顏色陣列，會依序循環使用
          colors: ['#FF5E5B', '#FFAA5E', '#FFDA5E', '#8AFF5E', '#5EFFC8', '#5EDBFF', '#5E85FF', '#A25EFF', '#E65EFF', '#FF5EAE']
        };
      },
      mounted() {
          // 綁定全域滑鼠移動事件
    window.addEventListener('mousemove', this.onMouseMove);
        requestAnimationFrame(this.animateTail);
      },
      methods: {
        onMouseMove(event) {
          @* const rect = event.currentTarget.getBoundingClientRect();
          this.mouseX = event.clientX - rect.left;
          this.mouseY = event.clientY - rect.top; *@
           // 直接使用全域滑鼠座標，不扣除容器位置
      this.mouseX = event.clientX;
      this.mouseY = event.clientY;
        },
        animateTail() {
          // 從尾端開始跟著前一個位置移動
          for (let i = this.tail.length - 1; i > 0; i--) {
            // x座標向前一段x座標移動30%的距離
            this.tail[i].x += (this.tail[i - 1].x - this.tail[i].x) * 0.3;
            // y座標向前一段y座標移動30%的距離
            this.tail[i].y += (this.tail[i - 1].y - this.tail[i].y) * 0.3;
          }
          // 頭部跟著滑鼠 ，移動30%的距離
          this.tail[0].x += (this.mouseX - this.tail[0].x) * 0.3;
          this.tail[0].y += (this.mouseY - this.tail[0].y) * 0.3;

          requestAnimationFrame(this.animateTail);
        }
      },
      template: `
        <div  style="width: 100vw;  position: relative; overflow: hidden;">
          <div
            v-for="(segment, index) in tail"
            :key="index"
            class="tail"
            :style="{
              @* top: (segment.y - 8) + 'px',
              left: (segment.x - 8) + 'px',
              backgroundColor: colors[index % colors.length],
              opacity: (1 - index / tail.length).toFixed(2) *@
            
            position: 'fixed', // 改成 fixed 讓尾巴跟著視窗座標走
          top: (segment.y - 8) + 'px',
          left: (segment.x - 8) + 'px',
          backgroundColor: colors[index % colors.length],
          opacity: (1 - index / tail.length).toFixed(2),
          width: '16px',
          height: '16px',
          borderRadius: '50%',
          pointerEvents: 'none' // 讓尾巴不攔截滑鼠事件
            
            }"
          ></div>
          @* <div style="position: absolute; bottom: 5px; left: 5px;">X: {{ mouseX }}, Y: {{ mouseY }}</div> *@
        <div style="position: fixed; bottom: 5px; left: 5px; color: black; background: white; padding: 2px 5px; border-radius: 3px; font-size: 12px;">
        X: {{ mouseX }}, Y: {{ mouseY }}
      </div>
        </div>
      `
    });

    app.mount('#app');
</script>
</html>
